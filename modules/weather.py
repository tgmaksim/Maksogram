import aiohttp

from typing import Union
from core import db, MaksogramBot
from sys_keys import openweathermap_api_key


API_URL = f"https://api.openweathermap.org/data/2.5/weather?lang=ru&units=metric&appid={openweathermap_api_key}"
icons = {
    "01d": "‚òÄÔ∏è", "01n": "üåô",
    "02d": "‚õÖÔ∏è", "02n": "‚õÖÔ∏è",
    "03d": "‚òÅÔ∏è", "03n": "‚òÅÔ∏è",
    "04d": "‚òÅÔ∏è", "04n": "‚òÅÔ∏è",
    "09d": "üåß",  "09n": "üåß",
    "10d": "üåß",  "10n": "üåß",
    "11d": "üå©",  "11n": "üå©",
    "13d": "üå®",  "13n": "üå®",
    "50d": "‚ö™Ô∏è",  "50n": "‚ö™Ô∏è",
}


async def check_city(city: str) -> bool:
    return await get_weather(city) is not None


def get_wind(wind: dict[str, Union[str, int]]) -> str:
    if 337.5 <= wind['deg'] or wind['deg'] < 22.5:
        direction = "—Å–µ–≤–µ—Ä–Ω—ã–π"
    elif 22.5 <= wind['deg'] < 67.5:
        direction = "—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π"
    elif 67.5 <= wind['deg'] < 112.5:
        direction = "—Å–µ–≤–µ—Ä–Ω—ã–π"
    elif 112.5 <= wind['deg'] < 157.5:
        direction = "—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π"
    elif 157.5 <= wind['deg'] < 202.5:
        direction = "—é–∂–Ω—ã–π"
    elif 202.5 <= wind['deg'] < 247.5:
        direction = "—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π"
    elif 247.5 <= wind['deg'] < 292.5:
        direction = "–∑–∞–ø–∞–¥–Ω—ã–π"
    elif 292.5 <= wind['deg'] < 337.5:
        direction = "—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π"
    else:
        direction = ""
    return f"{direction} {wind['speed']} –º/—Å üí®"


def get_status(statuses: list[dict[str, Union[str, int]]]) -> str:
    result = []
    for status in statuses:
        icon = icons.get(status['icon'], "")
        result.append(f"{icon} {status['description']}")
    return " ".join(result)


async def get_weather(city: str) -> Union[dict[str, Union[str, int]], None]:
    async with aiohttp.ClientSession() as session:
        async with session.get(f"{API_URL}&q={city}") as response:
            request: dict[str, Union[str, int]] = await response.json()
            if request['cod'] == 200:
                return f"{get_status(request['weather'])}\n" \
                       f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(request['main']['temp'])}¬∞C\n" \
                       f"–û—â—É—â–∞–µ—Ç—Å—è: {round(request['main']['feels_like'])}¬∞C\n" \
                       f"–î–∞–≤–ª–µ–Ω–∏–µ: {round(request['main']['pressure'] / 1.333)} –º–º —Ä—Ç —Å—Ç–æ–ª–±–∞\n" \
                       f"–í–µ—Ç–µ—Ä: {get_wind(request['wind'])}"


async def main(account_id: int) -> str:
    city = await db.fetch_one(f"SELECT city FROM settings WHERE account_id={account_id}", one_data=True)
    weather = await get_weather(city)
    if weather is None:
        await MaksogramBot.send_system_message("‚ö†Ô∏è–û—à–∏–±–∫–∞ –≤ –ø–æ–≥–æ–¥–µ‚ö†Ô∏è\n–ö–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ —Ä–∞–≤–µ–Ω 200")
        return f"<b>–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}</b>\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞..."
    return f"<b>–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}</b>\n\n{weather}"
