from mg.config import OWNER, SITE, VERSION, VERSION_ID

from typing import Any

from aiogram import F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, FSInputFile
from . types import dp, bot, Blocked, CallbackData, support_link, feedback
from . functions import (
    new_message,
    payment_menu,
    referral_link,
    preview_options,
    get_subscription,
    get_blocked_users,
    subscription_menu,
    new_callback_query,
)

from aiogram.types import ReplyKeyboardRemove as KRemove
from aiogram.types import InlineKeyboardMarkup as IMarkup
from aiogram.types import InlineKeyboardButton as IButton

from mg.core.types import MaksogramBot
from mg.core.functions import error_notify, resources_path, get_account_status, renew_subscription


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
from mg.admin.bot import admin_initial
admin_initial()
from mg.menu.bot import menu_initial
menu_initial()
from . login import login_initial
login_initial()
from mg.changed_profile.bot import changed_profile_initial
changed_profile_initial()
from mg.speed_answers.bot import speed_answers_initial
speed_answers_initial()
from mg.security.bot import security_initial
security_initial()
from mg.ghost_mode.bot import ghost_mode_initial
ghost_mode_initial()
from mg.status_users.bot import status_users_initial
status_users_initial()
from mg.modules.bot import modules_initial
modules_initial()
from mg.answering_machine.bot import answering_machine_initial
answering_machine_initial()
from mg.bot.inline_mode import inline_mode_initial
inline_mode_initial()


cb = CallbackData()


@dp.message(Command('version'))
@error_notify()
async def _version(message: Message):
    if await new_message(message): return
    await message.answer(f"–í–µ—Ä—Å–∏—è: {VERSION}\n<a href='{SITE}/{VERSION_ID}'>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ üëá</a>",
                         link_preview_options=preview_options(VERSION_ID))


@dp.callback_query(F.data.startswith(cb.command('friends')))
@error_notify()
async def _friends_button(callback_query: CallbackQuery):
    if await new_callback_query(callback_query): return
    await callback_query.message.edit_text(**friends())


def friends() -> dict[str, Any]:
    markup = IMarkup(inline_keyboard=[[IButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", callback_data=cb('friends_link'))]])
    return dict(text="üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ —Å–≤–æ–∏—Ö –∑–Ω–∞–∫–æ–º—ã—Ö –∏ "
                     "–ø–æ–ª—É—á–∞–π—Ç–µ –≤ –ø–æ–¥–∞—Ä–æ–∫ <b>–º–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏</b> –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞", reply_markup=markup)


@dp.callback_query(F.data.startswith(cb.command('friends_link')))
@error_notify()
async def _friends_link(callback_query: CallbackQuery):
    if await new_callback_query(callback_query): return
    await callback_query.message.answer_photo(**friends_link(callback_query.from_user.id))
    await callback_query.message.delete()


def friends_link(account_id: int) -> dict[str, Any]:
    start_url = f"tg://resolve?domain={MaksogramBot.username}&start={referral_link(account_id)}"
    markup = IMarkup(inline_keyboard=[[IButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", url=start_url)]])
    return dict(
        photo=FSInputFile(resources_path("logo.jpg")), disable_web_page_preview=True, reply_markup=markup,
        caption=f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ö–æ—á—É —Ç–µ–±–µ –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –æ—Ç–ª–∏—á–Ω–æ–≥–æ <a href='{start_url}'>–±–æ—Ç–∞</a>\n"
                "‚Ä¢ –ú–æ–∂–Ω–æ <b>—Å–º–æ—Ç—Ä–µ—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ</b> –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
                "‚Ä¢ –í—Å–µ–≥–¥–∞ —É–∑–Ω–∞–≤–∞—Ç—å –æ –Ω–æ–≤–æ–π –∞–≤–∞—Ç–∞—Ä–∫–µ, –ø–æ–¥–∞—Ä–∫–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏ –¥—Ä—É–≥–∞\n"
                "‚Ä¢ –°–º–æ–∂–µ—à—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—Ç—å –ì–° –∏ –∫—Ä—É–∂–∫–∏ –±–µ–∑ Telegram Premium\n"
                "‚Ä¢ –í–∫–ª—é—á–∞—Ç—å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫, –∫–æ–≥–¥–∞ –æ—á–µ–Ω—å –∑–∞–Ω—è—Ç –∏–ª–∏ —Å–ø–∏—à—å\n"
                "‚Ä¢ –ë—ã—Å—Ç—Ä–æ —É–∑–Ω–∞–µ—à—å, –∫–æ–≥–¥–∞ –¥—Ä—É–≥ –≤ —Å–µ—Ç–∏, –ø—Ä–æ—Å–Ω—É–ª—Å—è –∏–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                f"–¢–∞–∫–∂–µ –≤ –Ω–µ–º –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö <b><a href='{SITE}'>–ø–æ–ª–µ–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</a></b>")


@dp.message(Command('feedback'))
@error_notify()
async def _feedback(message: Message):
    if await new_message(message): return
    account_id = message.chat.id

    if not await get_account_status(account_id):
        button_text = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã"
        message_text = "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, —á—Ç–æ –¥—É–º–∞—é –æ Maksogram –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏?"
    else:
        button_text = "–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤"
        message_text = \
            "‚ùóÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ! ‚ùóÔ∏è\n–í–∞—à –æ—Ç–∑—ã–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã—Ö –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–π –∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ\n" \
            "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –≤—ã—Ä–∞–∑–∏—Ç—å —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ –ø–æ –ø–æ–≤–æ–¥—É —Ä–∞–±–æ—Ç—ã Maksogram. –ó–∞ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–∑—ã–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ " \
            f"–≤ –ø–æ–¥–∞—Ä–æ–∫ –Ω–µ–¥–µ–ª—é –ø–æ–¥–ø–∏—Å–∫–∏\n\n–í–æ–∑–Ω–∏–∫—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ—Å–∏–º —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å {support_link}"

    markup = IMarkup(inline_keyboard=[[IButton(text=button_text, url=feedback)]])
    await message.answer(message_text, reply_markup=markup, disable_web_page_preview=True)


@dp.message(Command('help'))
@error_notify()
async def _help(message: Message):
    if await new_message(message): return
    rules = ("<blockquote expandable><b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</b>\n"
             "1. <b>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</b>\n"
             "1.1. ¬´<b>–°–∏—Å—Ç–µ–º–Ω—ã–µ —á–∞—Ç—ã</b>¬ª ‚Äî –ª–∏—á–Ω—ã–µ —á–∞—Ç—ã, –∫–∞–Ω–∞–ª—ã, —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã, –≥–∏–≥–∞–≥—Ä—É–ø–ø—ã, –±–∞–∑–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã "
             "(<a href='https://core.telegram.org/api/channel'>—Ç–µ—Ä–º–∏–Ω—ã Telegram API</a>) –∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å–æ–º "
             "Maksogram –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è, –Ω–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è—Å—å, –∫–∞–Ω–∞–ª ¬´–ú–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è¬ª, —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—É ¬´–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è¬ª –∏ "
             "–ª–∏—á–Ω—ã–π —á–∞—Ç —Å –±–æ—Ç–æ–º Maksogram.\n"
             
             "1.2. ¬´<b>–°–∏—Å—Ç–µ–º–Ω–∞—è –ø–∞–ø–∫–∞</b>¬ª ‚Äî –ø–∞–ø–∫–∞ (<a href='https://core.telegram.org/api/folders'>—Ç–µ—Ä–º–∏–Ω Telegram API</a>), "
             "—Å–æ–¥–µ—Ä–∂–∞—â–∞—è <i>–°–∏—Å—Ç–µ–º–Ω—ã–µ —á–∞—Ç—ã</i>, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å–æ–º Maksogram.\n"
             
             "1.3. ¬´<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>¬ª ‚Äî —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–µ—Ä–≤–∏—Å–∞ Maksogram.\n\n"
             
             "2. <b>–ó–∞–ø—Ä–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é</b>\n"
             
             "2.1. <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é</i> <b>–∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è</b> —É–¥–∞–ª—è—Ç—å <i>–°–∏—Å—Ç–µ–º–Ω—ã–µ —á–∞—Ç—ã</i> –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∞ —Ç–∞–∫–∂–µ –∏–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏—Ö –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å\n"
             
             "2.2. <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é</i> <b>–∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è</b> —É–¥–∞–ª—è—Ç—å <i>–°–∏—Å—Ç–µ–º–Ω—É—é –ø–∞–ø–∫—É</i> –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –µ–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∞ —Ç–∞–∫–∂–µ –∏–Ω—ã–º –æ–±—Ä–∞–∑–æ–º "
             "–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å\n"
             
             "2.3. <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é</i> <b>–∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è</b> –∏–∑–º–µ–Ω—è—Ç—å, —É–¥–∞–ª—è—Ç—å –∏–ª–∏ –∏–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ <i>–°–∏—Å—Ç–µ–º–Ω—ã—Ö —á–∞—Ç–∞—Ö</i>.\n\n"
             
             "3. <b>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n"
             
             "3.1. –õ—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ –æ–±—Ö–æ–¥ –∏–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—Ç–æ–≤, —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö 2 –∏ 3, —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –∫–∞–∫ <b>–Ω–∞—Ä—É—à–µ–Ω–∏–µ</b> "
             "—É—Å–ª–æ–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.\n"
             
             "3.2. –õ—é–±–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–±–æ—é —Å–µ—Ä–≤–∏—Å–∞ Maksogram –≤ —Ç–æ–º —á–∏—Å–ª–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</i>. "
             "–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</i> <b>–ø—Ä–∏–∑–Ω–∞–µ—Ç—Å—è –≤–∏–Ω–æ–≤–Ω—ã–º</b> –∏ –æ–±—è–∑–∞–Ω –≤–æ–∑–º–µ—Å—Ç–∏—Ç—å —É—â–µ—Ä–±, –Ω–∞–Ω–µ—Å–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å—É Maksogram.\n"
             
             "3.3. –õ—é–±–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è <b>–ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å</b> —Å–µ—Ä–≤–∏—Å–∞ Maksogram –∑–∞ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö "
             "<i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>, –≤–∫–ª—é—á–∞—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –∑–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>\n\n"
             
             "4. <b>–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ Maksogram</b>\n"
             
             "4.1. –°–µ—Ä–≤–∏—Å Maksogram –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ —Ä–∞–∑—É–º–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ä—ã –¥–ª—è <b>–∑–∞—â–∏—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</b> "
             "<i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ Maksogram. –î–∞–Ω–Ω—ã–µ <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i> –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ "
             "–¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥ —Å–µ—Ä–≤–∏—Å–∞ Maksogram\n"
             
             "4.2. –°–µ—Ä–≤–∏—Å Maksogram –æ–±—è–∑—É–µ—Ç—Å—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å <b>–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è</b> —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º Telegram <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i> –≤ —Ä–∞–º–∫–∞—Ö "
             "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π. –û–¥–Ω–∞–∫–æ —Å–µ—Ä–≤–∏—Å <b>–Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏</b> –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "
             "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –¥–æ—Å—Ç—É–ø —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –∏–ª–∏ –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ Maksogram, –∞ —Ç–∞–∫–∂–µ –≤ —Å–ª—É—á–∞–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–±–æ–µ–≤, "
             "–¥–µ–π—Å—Ç–≤–∏–π —Ç—Ä–µ—Ç—å–∏—Ö –ª–∏—Ü –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram API –∏–ª–∏ –∏–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤ –≤–Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–µ—Ä–≤–∏—Å–∞ Maksogram\n"
             
             "4.3. –°–µ—Ä–≤–∏—Å Maksogram –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</i> –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º "
             f"—Å–µ—Ä–≤–∏—Å–∞ Maksogram –∏ –ª–∏—á–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º Telegram –≤ —Ä–∞–∑—É–º–Ω—ã–µ —Å—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ {support_link}\n\n"
             
             "5. –¶–µ–ª—å –ø—Ä–∞–≤–∏–ª\n"
             
             "5.1. –ù–∞—Å—Ç–æ—è—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–≤–µ–¥–µ–Ω—ã –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ Maksogram, —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ "
             "—Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.</blockquote>")

    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Maksogram! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –æ—Ç–∫—Ä–æ–π—Ç–µ /menu –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è, –¥–∞–ª–µ–µ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. "
                         f"–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ {support_link}\n\n{rules}", disable_web_page_preview=True)


@dp.callback_query(F.data.startswith(cb.command('subscription')))
@error_notify()
async def _subscription(callback_query: CallbackQuery):
    if await new_callback_query(callback_query): return
    subscription_id = cb.deserialize(callback_query.data)[0]
    await callback_query.message.edit_caption(**await subscription_menu(callback_query.from_user.id, subscription_id))


@dp.callback_query(F.data.startswith(cb.command('payment')))  # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏
@error_notify()
async def _payment(callback_query: CallbackQuery):
    if await new_callback_query(callback_query): return
    (message := await payment_menu()).pop('photo')
    await callback_query.message.edit_caption(**message)


@dp.callback_query(F.data.startswith(cb.command('send_payment')))
@error_notify()
async def _send_payment(callback_query: CallbackQuery):
    if await new_callback_query(callback_query): return
    account_id = callback_query.from_user.id
    subscription_id = cb.deserialize(callback_query.data)[0]

    subscription = await get_subscription(subscription_id)

    # –ö–∞–∫–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, –∫–∞–∫–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∫—É–ø–ª–µ–Ω–∞, —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏
    markup = IMarkup(inline_keyboard=[[
        IButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å! ‚úÖ", callback_data=cb('confirm_payment', account_id, subscription_id, callback_query.message.message_id))]])

    await bot.send_message(OWNER, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {account_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –æ–ø–ª–∞—Ç—É, –ø—Ä–æ–≤–µ—Ä—å —ç—Ç–æ! –ï—Å–ª–∏ —Ç–∞–∫, —Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏, "
                                  f"—á—Ç–æ–±—ã —è –ø—Ä–æ–¥–ª–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ {subscription.about.lower()}", reply_markup=markup)
    await callback_query.answer("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è. –û–∂–∏–¥–∞–π—Ç–µ!", True)


@dp.callback_query(F.data.startswith(cb.command('confirm_payment')))
@error_notify()
async def _confirm_sending_payment(callback_query: CallbackQuery):
    if await new_callback_query(callback_query): return
    account_id, subscription_id, message_id = cb.deserialize(callback_query.data)
    subscription = await get_subscription(subscription_id)
    await renew_subscription(account_id, subscription.duration)

    await bot.edit_message_reply_markup(chat_id=account_id, message_id=message_id)
    await bot.send_message(account_id, f"–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ü–æ–¥–ø–∏—Å–∫–∞ Maksogram –ø—Ä–æ–¥–ª–µ–Ω–∞ –Ω–∞ {subscription.about.lower()}", reply_to_message_id=message_id)
    await callback_query.message.edit_text(callback_query.message.text + '\n\n–£—Å–ø–µ—à–Ω–æ!')


@dp.message()
@error_notify()
async def _other_messages(message: Message):
    if await new_message(message, params={"–û–±—Ä–∞–±–æ—Ç–∫–∞": "–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ"}): return
    # await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–∫—Ä–æ–π—Ç–µ /menu", reply_markup=KRemove())


@dp.callback_query()
@error_notify()
async def _other_callback_queries(callback_query: CallbackQuery):
    if await new_callback_query(callback_query, params={"–û–±—Ä–∞–±–æ—Ç–∫–∞": "–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ"}): return
    await callback_query.answer("–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ!")


async def start_bot():
    Blocked.users = await get_blocked_users()

    await bot.send_message(OWNER, f"<b>–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!üöÄ</b>")
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

    await dp.start_polling(bot)
